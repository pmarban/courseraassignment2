courseraassignment2code
===================
#Code for coursera assignment 2.
## "makematrix" creates a special "matrix" object that can cache its inverse  
> makematrix <- function(x = matrix()) {
+     inv <- NULL
+     set <- function(y) {
+         x <<- y
+         inv <<- NULL
+     }
+     get <- function() x
+     setinverse <- function(inverse) inv <<- inverse
+     getinverse <- function() inv
+     list(set=set, get=get, setinverse=setinverse, getinverse=getinverse)
+ }


## "cachesolve" returns a matrix that is the inverse of 'x'
> cachesolve <- function(x, ...) {
+     inv <- x$getinverse()
+     if(!is.null(inv)) {
+         message("getting cached data.")
+         return(inv)
+     }
+     data <- x$get()
+     inv <- solve(data)
+     x$setinverse(inv)
+     inv
+ }
> x = rbind(c(2, -1/8), c(-1/8, 2))
> m = makematrix(x)
> m$get()
> cachesolve(m)
> cachesolve(m)
# Getting cached data.
